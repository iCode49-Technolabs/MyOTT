# Generated by Django 4.1.7 on 2023-03-25 08:40

import OTT.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdvertisorManagment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advertisorEmail', models.EmailField(max_length=100, verbose_name='Advertisor Email')),
                ('advertisorName', models.CharField(max_length=500, verbose_name='Advertisor Name')),
                ('advertisorPhoneNumber', models.CharField(max_length=15, verbose_name='Advertisor Phone Number')),
                ('advertisorPassword', models.CharField(max_length=250, verbose_name='Advertisor Password')),
                ('companyName', models.CharField(max_length=200, verbose_name='Company Name')),
                ('companyLogo', models.FileField(blank=True, null=True, upload_to='OTT/static/image/company/logo', validators=[OTT.validators.validate_file_extension_image], verbose_name='Company Logo')),
                ('payment', models.CharField(max_length=20, verbose_name='Payment')),
                ('commission', models.CharField(max_length=20, verbose_name='Commission')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('castName', models.CharField(max_length=100, verbose_name='Cast Name')),
                ('castImage', models.FileField(blank=True, null=True, upload_to='OTT/static/image/cast_image', validators=[OTT.validators.validate_file_extension_image], verbose_name='Cast Images')),
                ('castType', models.CharField(max_length=100, verbose_name='Cast Type')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoryName', models.CharField(max_length=100, verbose_name='Category Name')),
                ('categoryImage', models.FileField(blank=True, null=True, upload_to='OTT/static/image/category_image', validators=[OTT.validators.validate_file_extension_image], verbose_name='category Images')),
            ],
        ),
        migrations.CreateModel(
            name='DistributorManagment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distributorEmail', models.EmailField(max_length=100, verbose_name='Distributor Email')),
                ('distributorName', models.CharField(max_length=500, verbose_name='Distributor Name')),
                ('distributorPhoneNumber', models.CharField(max_length=15, verbose_name='Distributor Phone Number')),
                ('distributorPassword', models.CharField(max_length=250, verbose_name='Distributor Password')),
                ('companyName', models.CharField(max_length=200, verbose_name='Company Name')),
                ('companyLogo', models.FileField(blank=True, null=True, upload_to='OTT/static/image/company/logo', validators=[OTT.validators.validate_file_extension_image], verbose_name='Company Logo')),
                ('payment', models.CharField(max_length=20, verbose_name='Payment')),
                ('commission', models.CharField(max_length=20, verbose_name='Commission')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genreName', models.CharField(max_length=100, verbose_name='Genre Name')),
            ],
        ),
        migrations.CreateModel(
            name='LiveStream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channelName', models.CharField(max_length=500, verbose_name='Channel Name')),
                ('streamThumbnail', models.FileField(blank=True, null=True, upload_to='OTT/static/image/liveStream/thumbnail', validators=[OTT.validators.validate_file_extension_image], verbose_name='Stream Thumbail')),
                ('streamPoster', models.FileField(blank=True, null=True, upload_to='OTT/static/image/liveStream/poster', validators=[OTT.validators.validate_file_extension_image], verbose_name='Stream Poster')),
                ('channelURL', models.CharField(max_length=500, verbose_name='Channel URL')),
                ('streamType', models.CharField(default=None, max_length=10, verbose_name='Stream Type')),
                ('paidAmount', models.IntegerField(blank=True, null=True, verbose_name='Paid Amount')),
                ('streamPublishType', models.CharField(max_length=10, verbose_name='Stream Publish Type')),
                ('upcomingStreamTime', models.TimeField(default=None, verbose_name='Upcoming Stream Time')),
                ('upcomingStreamDate', models.DateField(default=None, verbose_name='Upcoming Stream Date')),
                ('active', models.CharField(default='yes', max_length=3, verbose_name='is Stream Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('streamCategory', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Stream_category', to='OTT.category', verbose_name='Category')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movieName', models.CharField(max_length=500, verbose_name='Movie Name')),
                ('movieLanguage', models.CharField(default=None, max_length=500, verbose_name='Movie Language')),
                ('movieAccess', models.CharField(default=None, max_length=10, verbose_name='Movie Access')),
                ('moviePrice', models.IntegerField(blank=True, null=True)),
                ('movieDuration', models.CharField(max_length=50, verbose_name='Movie Durations')),
                ('movieDescription', models.TextField(blank=True, null=True, verbose_name='Movie Description')),
                ('movieTrailer', models.CharField(max_length=500, verbose_name='Movie Trailer')),
                ('movieThumbnail', models.FileField(blank=True, null=True, upload_to='OTT/static/image/movies/thumbnail', validators=[OTT.validators.validate_file_extension_image], verbose_name='Movie Thumbail')),
                ('moviePoster', models.FileField(blank=True, null=True, upload_to='OTT/static/image/movies/poster', validators=[OTT.validators.validate_file_extension_image], verbose_name='Movie Poster')),
                ('movieLink_360p', models.CharField(max_length=500, verbose_name='Movie Link 360p')),
                ('movieLink_480p', models.CharField(max_length=500, verbose_name='Movie Link 480p')),
                ('movieLink_720p', models.CharField(max_length=500, verbose_name='Movie Link 720p')),
                ('movieLink_1080p', models.CharField(max_length=500, verbose_name='Movie Link 1080p')),
                ('active', models.CharField(default='yes', max_length=3, verbose_name='is Movie Active')),
                ('movieViews', models.IntegerField(blank=True, null=True)),
                ('movieLikes', models.IntegerField(blank=True, null=True)),
                ('movieDislikes', models.IntegerField(blank=True, null=True)),
                ('movie_is_for18Plus', models.CharField(max_length=3, verbose_name='movie is for 18+')),
                ('moviePublishType', models.CharField(max_length=5, verbose_name='Movie Publish Type')),
                ('laterMovieTime', models.TimeField(default=None)),
                ('laterMovieDate', models.DateField(default=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movieCast', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Movie_cast', to='OTT.cast', verbose_name='Cast')),
                ('movieCategory', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Movie_category', to='OTT.category', verbose_name='Category')),
                ('movieGenre', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Movie_genre', to='OTT.genre', verbose_name='Genre')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roleName', models.CharField(max_length=100, verbose_name='Role Name')),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seriesName', models.CharField(max_length=500, verbose_name='Series Name')),
                ('seriesLanguage', models.CharField(default=None, max_length=500, verbose_name='Series Language')),
                ('seriesDescription', models.TextField(blank=True, null=True, verbose_name='Series Description')),
                ('seriesTrailer', models.CharField(max_length=500, verbose_name='Series Trailer')),
                ('seriesPoster', models.FileField(blank=True, null=True, upload_to='OTT/static/image/series/poster', validators=[OTT.validators.validate_file_extension_image], verbose_name='series Poster')),
                ('seriesViews', models.IntegerField(blank=True, null=True, verbose_name='Series Views')),
                ('seriesLikes', models.IntegerField(blank=True, null=True, verbose_name='Series Likes')),
                ('seriesDislikes', models.IntegerField(blank=True, null=True, verbose_name='Series Dislikes')),
                ('seasonNumber', models.IntegerField(blank=True, null=True, verbose_name='Total Season')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('seriesCast', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seriesCast', to='OTT.cast', verbose_name='Cast')),
                ('seriesCategory', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seriesCategory', to='OTT.category', verbose_name='Category')),
                ('seriesGenre', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seriesGenre', to='OTT.genre', verbose_name='Genre')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscriptionName', models.CharField(max_length=500, verbose_name='Subscription Name')),
                ('subscriptionType', models.CharField(max_length=500, verbose_name='Subscription Type')),
                ('subscriptionDuration', models.CharField(max_length=500, verbose_name='Subscription Durations')),
                ('subscriptionDescription', models.TextField(blank=True, null=True, verbose_name='Subscription Description')),
                ('subscriptionAmount', models.IntegerField(blank=True, null=True, verbose_name='Subscription Amount')),
                ('numberOfDevice', models.IntegerField(blank=True, null=True, verbose_name='Number of Device')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mainUser', models.CharField(max_length=500, verbose_name='Main User')),
                ('profileID', models.CharField(max_length=500, verbose_name='Profile Name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_movie', to='OTT.movie', verbose_name='Movie')),
                ('series', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_series', to='OTT.series', verbose_name='Series')),
            ],
        ),
        migrations.CreateModel(
            name='UserDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_ID', models.CharField(max_length=100, verbose_name='User ID')),
                ('email', models.CharField(max_length=200, verbose_name='User Email')),
                ('mobileNumber', models.CharField(max_length=15, null=True, verbose_name='Mobile Number')),
                ('firstName', models.CharField(max_length=200, verbose_name='First Name')),
                ('lastName', models.CharField(max_length=200, verbose_name='Last Name')),
                ('birthDate', models.DateField(null=True, verbose_name='Birth Date')),
                ('isActive', models.CharField(default='yes', max_length=3, verbose_name='is user Active')),
                ('isDelete', models.CharField(default='no', max_length=3, verbose_name='is user Delete')),
                ('logicType', models.IntegerField(blank=True, null=True, verbose_name='Logic Type')),
                ('googleID', models.CharField(max_length=100, verbose_name='Google ID')),
                ('facebookID', models.CharField(max_length=100, verbose_name='Facebook ID')),
                ('lastLoginDate', models.DateTimeField(auto_now_add=True, verbose_name='Last Login Date')),
                ('lastRenewedON', models.DateField(null=True, verbose_name='Last Renewed On')),
                ('modificationON', models.DateTimeField(null=True, verbose_name='Modification On')),
                ('OTP', models.CharField(blank=True, max_length=50, null=True, verbose_name='OTP')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subscription', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscription_ID', to='OTT.subscription', verbose_name='Subscription ID')),
                ('userType', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='role', to='OTT.role', verbose_name='User Role')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100, verbose_name='Email')),
                ('phoneNumber', models.CharField(max_length=15, verbose_name='Phone Number')),
                ('amount', models.IntegerField(blank=True, null=True, verbose_name='Amount')),
                ('paymentID', models.CharField(max_length=500, verbose_name='Payment ID')),
                ('paymentDateTime', models.DateTimeField(auto_now_add=True, verbose_name='Payment Time Date')),
                ('transactionStatus', models.CharField(max_length=10, verbose_name='Transaction Status')),
                ('subscriptionPlan', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscription_plan', to='OTT.subscription', verbose_name='Subscription Plan')),
            ],
        ),
        migrations.CreateModel(
            name='slideBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('videoType', models.CharField(max_length=25, verbose_name='Video Type')),
                ('sliderTitle', models.CharField(max_length=200, verbose_name='Slider Title')),
                ('streamThumbnail', models.FileField(blank=True, null=True, upload_to='OTT/static/image/Slider', validators=[OTT.validators.validate_file_extension_image], verbose_name='Slider Image')),
                ('active', models.CharField(default='no', max_length=3, verbose_name='is slider Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='select_movie', to='OTT.movie', verbose_name='Movie')),
                ('series', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='select_series', to='OTT.series', verbose_name='Series')),
                ('stream', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='select_stream', to='OTT.livestream', verbose_name='Live Stream')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profileName', models.CharField(blank=True, max_length=100, null=True, verbose_name='Profile Name')),
                ('avtar', models.CharField(blank=True, max_length=500, null=True, verbose_name='Avtar')),
                ('profileType', models.CharField(blank=True, max_length=50, null=True, verbose_name='Profile Type')),
                ('intrest', models.TextField(blank=True, null=True, verbose_name='Intrest')),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_id', to='OTT.userdetail', verbose_name='User ID')),
            ],
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episodeName', models.CharField(max_length=500, verbose_name='Episode Name')),
                ('episodeNumber', models.IntegerField(blank=True, null=True, verbose_name='Episode Number')),
                ('seasonNumber', models.IntegerField(blank=True, null=True, verbose_name='Season Number')),
                ('episodeDuration', models.CharField(max_length=50, verbose_name='Episode Durations')),
                ('episodeDescription', models.TextField(blank=True, null=True, verbose_name='Episode Description')),
                ('episodeThumbnail', models.FileField(blank=True, null=True, upload_to='OTT/static/image/episode/thumbnail', validators=[OTT.validators.validate_file_extension_image], verbose_name='Episode Thumbail')),
                ('episodeLink_360p', models.CharField(max_length=500, verbose_name='Episode Link 360p')),
                ('episodeLink_480p', models.CharField(max_length=500, verbose_name='Episode Link 480p')),
                ('episodeLink_720p', models.CharField(max_length=500, verbose_name='Episode Link 720p')),
                ('episodeLink_1080p', models.CharField(max_length=500, verbose_name='Episode Link 1080p')),
                ('episodeAccess', models.CharField(default=None, max_length=10, verbose_name='Episode Access')),
                ('active', models.CharField(default='yes', max_length=3, verbose_name='is Episode Active')),
                ('episodeViews', models.IntegerField(blank=True, null=True, verbose_name='Episode Views')),
                ('episodeLikes', models.IntegerField(blank=True, null=True, verbose_name='Episode Likes')),
                ('episodeDislikes', models.IntegerField(blank=True, null=True, verbose_name='Episode Dislikes')),
                ('episode_is_for18Plus', models.CharField(max_length=3, verbose_name='Episode is for 18+')),
                ('episodePublishType', models.CharField(max_length=5, verbose_name='Episode Publish Type')),
                ('laterEpisodeTime', models.TimeField(default=None)),
                ('laterEpisodeDate', models.DateField(default=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('seriesName', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='series_name', to='OTT.series', verbose_name='Series Name')),
            ],
        ),
        migrations.CreateModel(
            name='Advertise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advertiseName', models.CharField(max_length=500, verbose_name='Advertise Name')),
                ('advertiseDescription', models.TextField(blank=True, null=True, verbose_name='Advertise Description')),
                ('advertiseThumbnail', models.FileField(blank=True, null=True, upload_to='OTT/static/image/advertise/thumbnail', validators=[OTT.validators.validate_file_extension_image], verbose_name='Advertise Thumbail')),
                ('advertiseDuration', models.CharField(max_length=50, verbose_name='Advertise Durations')),
                ('advertiseLink_360p', models.CharField(max_length=500, verbose_name='Advertise Link 360p')),
                ('advertiseLink_480p', models.CharField(max_length=500, verbose_name='Advertise Link 480p')),
                ('advertiseLink_720p', models.CharField(max_length=500, verbose_name='Advertise Link 720p')),
                ('advertiseLink_1080p', models.CharField(max_length=500, verbose_name='Advertise Link 1080p')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('advertisorID', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='advertisor_name', to='OTT.advertisormanagment', verbose_name='Advertisor Name')),
            ],
        ),
    ]
